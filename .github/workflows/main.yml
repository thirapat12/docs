name: Github Workflow CI/CD
on:
  push:
    branches:
    - master
  pull_request:

jobs:
  build:
    name: Prepare Workflow
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - uses: benjlevesque/short-sha@v2.2
      id: short-sha
      with:
        length: 6
    - run: echo $SHA
      env:
        SHA: ${{ steps.short-sha.outputs.sha }}
    - run: echo $SHA
      env:
        SHA: ${{ env.SHA }}

    - name: Kaniko build
      uses: aevea/action-kaniko@master
      with:
        image: thirapat12
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        tags: ${{ env.SHA }}
        cache: true
        cache_registry: aevea/cache

    # - name: Login to Docker Hub for Thirapat Registry
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Prepare Node 10
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: 10
    # - run: npm install

    # - name: Run Trivy vulnerability scanner fs dependency into package-lock.json
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     scan-type: 'fs'
    #     scan-ref: 'package-lock.json'
    #     ignore-unfixed: true
    #     # format: 'table'
    #     output: 'report-dependencies.json'
    #     severity: 'CRITICAL,HIGH,MEDIUM'

    # - name: Run Trivy vulnerability scanner fs dependency into package-lock.json
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     scan-type: 'fs'
    #     scan-ref: 'package-lock.json'
    #     format: 'sarif'
    #     output: 'trivy-dependencies.sarif'
    #     ignore-unfixed: true
    #     severity: 'CRITICAL,HIGH,MEDIUM'



    # - name: Generate tarball from image
    #   run: |
    #     docker build -t ci:1.0.0 .
    #     docker save -o vuln-image.tar ci:1.0.0
    
    # - name: Run Trivy vulnerability scanner build image
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'ci:1.0.0'
    #     format: 'table'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH,MEDIUM'

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'ci:1.0.0'
    #     format: 'sarif'
    #     output: 'trivy-results.sarif'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH,MEDIUM'

    # - name: Run Trivy vulnerability scanner in tarball mode
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     input: /github/workspace/vuln-image.tar
    #     format: 'sarif'
    #     output: 'trivy-image.sarif'
    #     severity: 'CRITICAL,HIGH'

    # - name: Upload Trivy scan results 1
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-dependencies.sarif'

    # - name: Upload Trivy scan results 2
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-image.sarif'

    # - name: upload result vul dependencies
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: report-vul-dependencies
    #     path: report-dependencies.json

    # - name: upload result vul image base
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: report-vul-image
    #     path: report-image.json
